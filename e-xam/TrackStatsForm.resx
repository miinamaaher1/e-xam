<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TrackStatsReportViewer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>